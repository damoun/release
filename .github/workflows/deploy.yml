name: Deployment

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 5 * * *'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    name: "Build üì¶Ô∏è"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        console: ['switch', 'xboxone', 'ps4']
    steps:
      - uses: actions/checkout@v3
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-python-modules
        with:
          path: ~/.cache/pipenv
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-g
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install pipenv
          pipenv install .
      - name: ${{ matrix.console }}
        env:
          CONSOLE: ${{ matrix.console }}
        run: pipenv run python -m release.cli --output calendars ${CONSOLE}
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.console }}
          path: calendars
  deploy:
    name: "Deploy üöÄ"
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
        with:
          path: calendars
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: calendars
      - name: Deploy üöÄ
        if: success()
        id: deployment
        uses: actions/deploy-pages@main
